name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: easycamper
          POSTGRES_PASSWORD: secret123
          POSTGRES_DB: easycamper_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U easycamper"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      NODE_ENV: test
      POSTGRES_USER: easycamper
      POSTGRES_PASSWORD: secret123
      POSTGRES_DB: easycamper_test
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      JWT_SECRET: dummysecret
      JWT_REFRESH_SECRET: dummyrefresh
      JWT_EXPIRES_IN: 1h
      JWT_REFRESH_EXPIRES_IN: 7d

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Wait for Postgres
        run: npx wait-on tcp:localhost:5432

      - name: Run migrations
        run: npx sequelize-cli db:migrate --env test

      - name: Seed test data
        run: npx sequelize-cli db:seed:all --env test

      - name: Run tests
        run: npm test

  docker:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: server/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/easycamper:latest
